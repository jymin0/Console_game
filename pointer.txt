포인터의 속성

1. 변수로서(가변, 데이터 저장)

2. 주소로서(다른 변수를 '가리키'게되는) -> 데이터를 담기는 하지만 다른 변수를 가리키는 '주소'라는 데이터를 답을 뿐이다!

+) *는 뒤의 변수가 포인터임을 강조, 가리키는 속성이 강화된다.

가리키고 전달하는 역할!

이둘을 나타낼때는 그럼 다르게 나타낸다.

-> int*p = &a;

그럼 '이 변수는 포인터 변수이다.'라는 의미를 가지게 됨

그렇게 되면 이 변수는 다른 변수와 달리 "포인터"라는 성질을 한가지 더가지게 되는 것이다.
(*포인터의 속성을 강조한다)


(ppt참조)주씨

int a;
int *pa = &a;
일 때

 *pa = b;
a = b;
는 같은 의미이다
라는 결론을 도출했지
그래서 완전히 바꾸어 쓸 수 있다.

*pa == a


int* p = &a
에서 p의 자료형은 int*형이다
(=int를 가리키는 포인터형)

int**은 int*의 포인터(*)dlsl
int를 가리키는 포인터를 가리키는 포인터

함수 호출에는 2가지 방식이 있다.
	- call by value

	- cal by reference (pointer parameter)


+) 배열
int a[] = {100,200,300,400,500};
을 선언 하는 순간 a = '상수'포인터가 된다. (바꿀수 없는 포인터, 바꿀수 없는 주소값을 저장하는 것 이 되어버린다.)